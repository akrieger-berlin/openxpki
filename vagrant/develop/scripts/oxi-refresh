#!/bin/bash
## <info> Copy latest code from /code-repo, compile, install dependencies, restart OpenXPKI
test $(whoami) != "root" && echo "Please run this as root: sudo $0" && exit 1
set -o pipefail

#
# Exit handler
#
LOG=$(mktemp)
function _exit () {
    if [ $1 -ne 0 -a $1 -ne 333 ]; then
        echo "$0: ERROR - last command exited with code $1, output:" && cat $LOG
    fi
    rm -f $LOG
    exit $1
}
trap '_exit $?' EXIT

set -e

#
# Grab and install Perl module dependencies from Makefile.PL using PPI
#
# fix problems with newer Net::DNS:
rm -f /usr/lib/x86_64-linux-gnu/perl5/5.20/Net/DNS.pm
cpanm --notest Net::DNS                                               >$LOG 2>&1

echo "Checking for new Perl dependencies in latest code"
cpanm --notest PPI                                                    >$LOG 2>&1
/code-repo/tools/scripts/makefile2cpanfile.pl > /cpanfile
cpanm --quiet --notest --installdeps /

#
# Copy current code and realm CA-ONE config
#
echo "Copying current code and binaries from repo"

rsync -a --delete /code-repo/core/server/cgi-bin/* /usr/lib/cgi-bin/           >$LOG 2>&1
rsync -a --delete /code-repo/core/server/htdocs/*  /var/www/openxpki/          >$LOG 2>&1
test -e /var/www/openxpki/index.html || ln -s default.html /var/www/openxpki/index.html

rsync -a --delete \
  /code-repo/config/openxpki/config.d/realm/ca-one/* \
  /etc/openxpki/config.d/realm/ca-one/                                >$LOG 2>&1
chown -R openxpki:root /etc/openxpki/config.d/realm/ca-one            >$LOG 2>&1

# set /var/tmp instead of /tmp (where only root has write access)
sed -ri 's/(LOCATION:)\s*\/tmp.*/\1 \/var\/tmp/g' /etc/openxpki/config.d/realm/ca-one/publishing.yaml

#
# Compile OpenXPKI
#
echo "Synchronizing source code from host to $OXI_CORE_DIR"
rsync -a --delete --exclude=.git/ /code-repo/core/ $OXI_CORE_DIR

OXI_VERSION=$(cat /code-repo/.VERSION_MAJOR <(echo .) /code-repo/.VERSION_MINOR <(echo .) /code-repo/.VERSION_RELEASE | tr -d "\n" )

# Set version so Makefile.PL does not need "vergen" (which we did not copy to $OXI_CORE_DIR)
cat <<__VERSION > $OXI_CORE_DIR/server/OpenXPKI/VERSION.pm
package OpenXPKI::VERSION;
our \$VERSION = '$OXI_VERSION';
1;
__VERSION

pushd $OXI_CORE_DIR/server                                            >$LOG 2>&1
perl Makefile.PL                                                      >$LOG 2>&1
echo "Compiling OpenXPKI $OXI_VERSION"
make                                                                  >$LOG 2>&1
echo "Installing OpenXPKI"
make install                                                          >$LOG 2>&1
popd                                                                  >$LOG 2>&1

echo "Copying CGI::Session::Driver::openxpki"
mkdir -p /usr/share/perl5/CGI/Session/Driver
cp $OXI_CORE_DIR/server/CGI_Session_Driver/openxpki.pm /usr/share/perl5/CGI/Session/Driver/

# if --no-i18n and --fast are NOT given
# (use # to strip text off $@ and see if string still equals original $@)
if [[ "${@#--no-i18n}" = "$@" && "${@#--fast}" = "$@" ]]; then
    echo "Compiling and installing I18N files"
    echo "$OXI_VERSION" > $OXI_CORE_DIR/i18n/VERSION
    pushd $OXI_CORE_DIR/i18n                                              >$LOG 2>&1
    langs=$(grep '^LANGS\s*=' Makefile | cut -d= -f2)
    for lang in $langs; do msgfmt -o $lang/openxpki.mo $lang/openxpki.po; done
    make install                                                          >$LOG 2>&1
    popd                                                                  >$LOG 2>&1
fi

# if --no-restart and --fast are NOT given
if [[ "${@#--no-restart}" = "$@" && "${@#--fast}" = "$@" ]]; then
    echo "Restarting OpenXPKI"
    openxpkictl restart                                               >$LOG 2>&1

    if [[ $(openxpkictl status 2>&1) == *"not running"* ]]; then
        echo "Error starting OpenXPKI"
        exit 333
    fi

    echo "Restarting Apache"
    systemctl restart apache2                                         >$LOG 2>&1
fi
