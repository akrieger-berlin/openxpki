# By default, all scep endpoints wll use the default token defined
# by the scep token group, if you pass a name here, it is considered
# a group name from the alias table
#token: ca-one-special-scep

# A renewal request is only accpeted if the used certificate will
# expire within this period of time.
renewal:
    # allow renewal 14 days before the certificate expires
    notbefore: 000014
    # allow renewal with already expired certificate (usually not set)
    # replaces "allow_expired_signer", not implemented yet!
    notafter: 0

# If the request was a replacement, optionally revoke the replaced
# certificate after a grace period
revoke_on_replace:
    reason_code: keyCompromise
    delay_revocation_time: +000014


workflow:
    type: certificate_enroll
    param:
        # key: name in workflow context, value: parameter from scep wrapper
        # server and interface are always set, the mapping below is
        # the default set that is used when no map is given
        transaction_id: transaction_id
        signer_cert: signer_cert
        pkcs10: pkcs10
        _url_params: url_params
        #_pkcs7: pkcs7


# allow rsa keys with 1020 to 2048 bit
# the 1020 is necessary as some implementations can have
# leading 0 in the modulus which will reduce the bitcount
key_size:
    rsaEncryption: 1020-2048

# allowed digest algorithms used for the CSR
hash_type:
  - sha1
  - sha256

authorized_signer:
    rule1:
        # Full DN
        subject: CN=.+:scepclient,.*
    rule2:
        # Full DN
        subject: CN=.+:pkiclient,.*

policy:
    # Authentication Options
    # Initial requests need ONE authentication.
    # Activate Challenge Password and/or HMAC by setting the appropriate
    # options below.

    # if set requests can be authenticated by an operator
    allow_man_authen: 1

    # if set, no authentication is required at all and hmac/challenge is
    # not evaluated even if it is set/present in the request!
    allow_anon_enroll: 0

    # Approval
    # If not autoapproved, allow opeerator to add approval by hand
    allow_man_approv: 1

    # if the eligibiliyt check failed the first time
    # show a button to run a recheck (Workflow goes to PENDING)
    allow_eligibility_recheck: 0

    # Approval points requirede (eligibity and operator count as one point each)
    # if you set this to "0", all authenticated requests are auto-approved!
    approval_points: 1

    # The number of active certs with the same subject that are allowed
    # to exist at the same time, deducted by one if a renewal is seen
    max_active_certs: 1

    # option will be removed
    # allow_expired_signer: 0

    # If an initial enrollment is seen
    # all existing certificates with the same subject are revoked
    auto_revoke_existing_certs: 1

    # allows a "renewal" outside the renewal window, the notafter date
    # is aligned to the old certificate. Set revoke_on_replace option
    # to revoke the replaced certificate.
    # This substitutes the "replace_window" from the OpenXPKI v1 config
    allow_replace: 1

response:
    # The scep standard is a bit unclear if the root should be in the chain or not
    # We consider it a security risk (trust should be always set by hand) but
    # as most clients seem to expect it, we include the root by default
    # If you are sure your clients do not need the root, set this to 1
    getcacert_strip_root: 0

profile:
  cert_profile: I18N_OPENXPKI_PROFILE_TLS_SERVER
  cert_subject_style: enroll

# Mapping of names to OpenXPKI profiles to be used with the
# Microsoft Certificate Template Name Ext. (1.3.6.1.4.1.311.20.2)
profile_map:
    pc-client: I18N_OPENXPKI_PROFILE_USER_AUTHENTICATION

# HMAC based authentication
hmac: verysecret

challenge:
    value: SecretChallenge

eligible:
    initial:
       value@: connector:scep.scep-server-1.connector.initial
       args: '[% context.cert_subject_parts.CN.0 %]'
       expect:
         - Build
         - New

    renewal:
       value: 1


connector:
    initial:
        class: Connector::Proxy::YAML
        LOCATION: /home/pkiadm/ca-one/enroll.yaml
